[gd_scene load_steps=4 format=3 uid="uid://6cecfsx70cfs"]

[ext_resource type="Texture2D" uid="uid://cal45yqtk62uw" path="res://player.png" id="1_4flbx"]

[sub_resource type="GDScript" id="GDScript_4flbx"]
resource_name = "movement"
script/source = "extends CharacterBody2D


const SPEED = 300.0
const JUMP_VELOCITY = -400.0


func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis(\"ui_left\", \"ui_right\")
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	move_and_slide()

const COLORS: Array = [Color(1,0,0), Color(0,1,0), Color(1,1,1)]

func _process(delta: float) -> void:
	if Input.is_action_just_pressed(\"ui_up\"):
		get_node(\"Sprite2D\").modulate = COLORS[0]
"

[sub_resource type="CircleShape2D" id="CircleShape2D_onrkg"]
radius = 9.21954

[node name="CharacterBody2D" type="CharacterBody2D"]
script = SubResource("GDScript_4flbx")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource("CircleShape2D_onrkg")

[node name="Sprite2D" type="Sprite2D" parent="."]
texture_filter = 1
texture = ExtResource("1_4flbx")
