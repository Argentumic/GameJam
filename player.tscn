[gd_scene load_steps=4 format=3 uid="uid://6cecfsx70cfs"]

[ext_resource type="Texture2D" uid="uid://cal45yqtk62uw" path="res://liquid.png" id="1_4flbx"]
[ext_resource type="Script" uid="uid://dde5o6ampra6m" path="res://Jump.gd" id="2_onrkg"]

[sub_resource type="GDScript" id="GDScript_4flbx"]
resource_name = "movement"
script/source = "extends CharacterBody2D


@export var speed: float = 250.0
var state_sprites: Array = [load(\"res://solid.png\"), load(\"res://liquid.png\"), load(\"res://gas.png\")]


func _physics_process(delta: float) -> void:

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis(\"Left\", \"Right\")
	if direction:
		velocity.x = move_toward(velocity.x, direction * speed, speed/6)
	else:
		velocity.x = move_toward(velocity.x, 0, speed/3)

	move_and_slide()


var state: int = 1

func _process(delta: float) -> void:
	get_node(\"Sprite2D\").texture = state_sprites[state]
	if Input.is_action_just_pressed(\"ShiftStates\") and state<3:
		if state == 2:
			state = 0
		else:
			state += 1
	if state == 0:
		get_node(\"Jump\").JUMP_VELOCITY = -50
		get_node(\"Jump\").gravity_coef = 1
		get_node(\"Jump\").gravity_fall_coef = 2.5
		speed = 75
	if state == 1:
		get_node(\"Jump\").JUMP_VELOCITY = -300
		get_node(\"Jump\").gravity_coef = 1
		get_node(\"Jump\").gravity_fall_coef = 2
		speed = 250
	if state == 2:
		get_node(\"Jump\").JUMP_VELOCITY = -250
		get_node(\"Jump\").gravity_coef = 0.5
		get_node(\"Jump\").gravity_fall_coef = 1
		speed = 150
"

[node name="Player" type="CharacterBody2D" groups=["Player"]]
script = SubResource("GDScript_4flbx")

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="."]
polygon = PackedVector2Array(0, -7, 6, 1, 8, 8, -8, 8, -6, 1)

[node name="Sprite2D" type="Sprite2D" parent="."]
texture_filter = 1
texture = ExtResource("1_4flbx")

[node name="Jump" type="Node2D" parent="."]
script = ExtResource("2_onrkg")
